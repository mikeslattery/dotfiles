#!/bin/sh
usage() { cat >&2 <<USAGE
Dotfile installer.

To install:
  curl -L https://raw.githubusercontent.com/mikeslattery/dotfiles/master/.local/bin/dotfiles | /bin/sh -s install
or
  wget https://raw.githubusercontent.com/mikeslattery/dotfiles/master/.local/bin/dotfiles -O - | /bin/sh -s install

Usage:  (after install)
  config   ...        - git subcomment.  Requires alias in .zshrc
  dotfiles [help]     - This message.
  dotfiles etc        - Copy ~/.config/dotfiles/etc to /etc
  dotfiles ssh <host> - Install to ssh host
  dotfiles tar <host> - Copy to ssh host w/o github access
  dotfiles uninstall  - Revert to config as before install.
  dotfiles docker <id>- Install into a running docker container
  dotfiles ...        - git subcommand. (in case "config" alias not set)

Environmental override variables
  DOTFILES_NAME   - github owner/project.  It's better to change the default.
  DOTFILES_BRANCH - default is master
  DOTFILES_DIR    - default is ~/.dotfiles

For more information, see:
  ~/README.md
  Other files in .config/dotfiles
  https://www.atlassian.com/git/tutorials/dotfiles

USAGE
}

set -eu

# if you edit this, also edit usage()
github="${DOTFILES_NAME:-mikeslattery/dotfiles}"
branch="${DOTFILES_BRANCH:-master}"
export GIT_DIR="${DOTFILES_DIR:-$HOME/.dotfiles}"

git_ssh_url="git@github.com:${github}.git"
git_http_url="https://github.com/${github}.git"
export GIT_WORK_TREE="$HOME"
HOSTNAME="${HOSTNAME:-$(hostname)}"
USER="${USER:-$(whoami)}"

die() { echo "$*"; exit 1; }

cmd="${1:-help}"
[ "$#" -eq 0 ] || shift

case "$cmd" in
  help)
    usage
    ;;
  curl)
    # for copy-paste
    echo "curl -L https://raw.githubusercontent.com/${github}/${branch}/.local/bin/dotfiles | /bin/sh -s install"
    ;;
  wget)
    echo "wget https://raw.githubusercontent.com/${github}/${branch}/.local/bin/dotfiles -O - | /bin/sh -s install"
    ;;
  install)
    if ! command -v git >/dev/null; then
      # fallback to unzip, if git not installed
      command -v unzip >/dev/null || die 'E: git nor unzip are installed'
      cd ~
      zip="https://github.com/${github}/archive/refs/heads/${branch}.zip"
      curl -sfLO "$zip" || wget -q "$zip"
      ln -sfn ~ "dotfiles-${branch}"
      unzip -o "${branch}.zip"
      rm "${branch}.zip" "dotfiles-${branch}"

      echo 'W: git is not installed.'
    else
      [ ! -d "$GIT_DIR" ] || die "E: $GIT_DIR already exists."
      # If git user not set, download config
      if ! git config user.name 2>/dev/null; then
        gitconfig="https://raw.githubusercontent.com/${github}/${branch}/.gitconfig"
        curl -sSLf "$gitconfig" -o ~/.gitconfig || \
          wget "$gitconfig" -O ~/.gitconfig -q || \
          git config --global --edit
      fi
      mkdir -p "$(dirname "$GIT_DIR")"
      (
        set -x
        git clone   --bare --branch "$branch" "$git_ssh_url"  "$GIT_DIR" || \
          git clone --bare --branch "$branch" "$git_http_url" "$GIT_DIR"
        git config --local status.showUntrackedFiles no
        git config --local core.excludesFile ~/.config/dotfiles/gitignore
        git config --local "branch.${branch}.remote" "origin"
        git config --local "branch.${branch}.merge" "refs/heads/${branch}"
        git reset
        git checkout -b "backup-${branch}-$HOSTNAME"
        git add -u
        git commit -m "backup of $HOSTNAME for $USER"
        git checkout -
        # if a new project w/o the script
        if [ ! -f .local/bin/dotfiles ]; then
          curl -L https://raw.githubusercontent.com/mikeslattery/dotfiles/master/.local/bin/dotfiles \
            --create-dirs -o ~/.local/bin/dotfiles
          chmod +x -o ~/.local/bin/dotfiles
          git add ~/.local/bin/dotfiles
        fi
      )
      # in case someone else is using this
      sed -i "s|mikeslattery/dotfiles|$github|" "$HOME/.local/bin/dotfiles"

      ls -la ~
      git status -b -s
      echo 'Run this: . ~/.zshrc, or: zsh'
    fi
    ;;
  uninstall)
    cd ~
    git diff-index --quiet HEAD || die 'E: Uncommitted changes'
    echo 'To reinstall: dotfile install'
    set -x

    git checkout "backup-$branch-$HOSTNAME"
    rm -rf "$GIT_DIR" ~/.config/dotfiles
    ;;
  etc)
    sudo cp -rv --preserve=mode ~/.config/dotfiles/etc/* /etc/ \
      || die 'E: coreutils not installed?'
    ;;
  ssh)
    set -x
    ssh "$@" /bin/sh -s install < "$0"
    ;;
  tar)
    set -x
    git -C ~ archive "${branch}" | ssh "$@" tar -x
    ssh "$@" ls -la
    ;;
  podman|docker)
    id="${1:-$("$cmd" ps -q | head -1)}"
    shift || true
    #shellcheck disable=SC2016
    dhome="$("$cmd" exec "$@" "$id" sh -c 'echo $HOME')"
    git archive "$branch" | "$cmd" exec -i "$@" "$id" tar -C "$dhome" -x
    ;;
  *)
    exec git -C "$HOME" "$cmd" "$@"
    ;;
esac

