#!/bin/sh
usage() { cat >&2 <<USAGE
Dotfile installer.

To install:
  curl -L https://raw.githubusercontent.com/mikeslattery/dotfiles/master/.local/bin/dotfiles | /bin/sh -s install
or
  wget https://raw.githubusercontent.com/mikeslattery/dotfiles/master/.local/bin/dotfiles -O - | /bin/sh -s install

An install will:
- Create a bare git repo at $GIT_DIR
- Checkout files to ~
- git stash previous conflicting dot files
- Configure to not show untracked files
- if git user isn't set up, downloads .gitconfig
- if git isn't installed, falls back to download files
- if ssh isn't set up or installed, falls back to https
- if curl isn't installed, falls back to wget

Usage:  (after install)
  config   ...        - git subcomment.  Requires alias in .zshrc
  dotfiles [help]     - This message.
  dotfiles etc        - Copy ~/.config/dotfiles/etc to /etc
  dotfiles ssh <host> - Install to ssh host
  dotfiles tar <host> - Copy to host w/o github access
  dotfiles uninstall  - Revert to config as before install.
  dotfiles ...        - git subcommand. (in case "config" alias not set)

Requirements:
  for install:  git or unzip, curl or wget
  for pushes:   git, openssh, and keys registered with github
  In .zprofile: export "PATH=$HOME/.local/bin"
  In .zshrc:    alias config="git -C $HOME --git-dir=$HOME/.dotfiles --work-tree=$HOME"

See also:
  Other files in .config/dotfiles
  https://www.atlassian.com/git/tutorials/dotfiles

Advice:
  Never run: config add <directory>, or config commit -a -m <message>
  "config" works best if run from home directory.

USAGE
}

set -eu

github='mikeslattery/dotfiles'

git_ssh_url="git@github.com:${github}.git"
git_http_url="https://github.com/${github}.git"
export GIT_DIR="$HOME/.dotfiles"
export GIT_WORK_TREE="$HOME"

die() { echo "$*"; exit 1; }

cmd="${1:-help}"
shift
case "$cmd" in
  help)
    usage
    ;;
  curl)
    # for copy-paste
    echo "curl -L https://raw.githubusercontent.com/${github}/master/.local/bin/dotfiles | /bin/sh -s install"
    ;;
  wget)
    echo "wget https://raw.githubusercontent.com/${github}/master/.local/bin/dotfiles -O - | /bin/sh -s install"
    ;;
  install)
    if ! command -v git >/dev/null; then
      # fallback to unzip, if git not installed
      command -v unzip >/dev/null || die 'E: git nor unzip are installed'
      cd ~
      zip="https://github.com/${github}/archive/refs/heads/master.zip"
      curl -sfLO "$zip" || wget -q "$zip"
      ln -sfn ~ dotfiles-master
      unzip -o master.zip
      rm master.zip dotfiles-master

      echo 'W: git is not installed.'
    else
      [ ! -d "$GIT_DIR" ] || die "E: $GIT_DIR already exists."
      # If git user not set, download config
      if ! git config user.name 2>/dev/null; then
        gitconfig="https://raw.githubusercontent.com/${github}/master/.gitconfig"
        curl -sLf "$gitconfig" -o ~/.gitconfig || wget "$gitconfig" -O ~/.gitconfig -q
      fi
      mkdir -p "$(dirname "$GIT_DIR")"
      set -x
      git clone --bare "$git_ssh_url" "$GIT_DIR" || git clone --bare "$git_http_url" "$GIT_DIR"
      git config --local status.showUntrackedFiles no
      git config --local core.excludesFile ~/.config/dotfiles/gitignore
      git config --local branch.master.remote origin
      git config --local branch.master.merge refs/heads/master
      git config --local branch.master.first_commit "$(git rev-parse HEAD)"
      git reset
      git stash push -m backup
      ls -la ~
      echo 'Run this: . ~/.zshrc'
    fi
    ;;
  uninstall)
    cd ~
    set -x
    git reset
    git checkout
    git checkout master
    git reset --hard "$(git config --local branch.master.first_commit)"
    git stash apply 'stash^{/backup}' || true
    rm -rf "$GIT_DIR" ~/.config/dotfiles
    ;;
  etc)
    sudo cp -rv --preserve=mode ~/.config/dotfiles/etc/* /etc/ \
      || die 'E: coreutils not installed?'
    ;;
  ssh)
    set -x
    ssh "$@" /bin/sh -s install < "$0"
    ;;
  tar)
    set -x
    git -C ~ archive master | ssh "$@" tar -x
    ssh "$@" ls -la
    ;;
  *)
    exec git -C "$HOME" "$cmd" "$@"
    ;;
esac

