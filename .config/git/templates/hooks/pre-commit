#!/usr/bin/sh
#
# A hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.

set -eu

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against="$(git hash-object -t tree /dev/null)"
fi

has() {
  if ! command -v "$1" >/dev/null; then
    echo "$1 is not in path"
    return 1
  fi
}

# Redirect output to stderr.
exec 1>&2

# Get list of staged files
filesargs() {
  git diff -z --name-only --diff-filter=AM --cached "$against" -- | \
    xargs -0 -r \
    "$@"
}

# If there are whitespace errors, print the offending file names and fail.
filesargs git diff-index --check --cached "$against" --

# no TODO comments.   TODOs are allowed for commit, but not push.
( filesargs grep -F TODO ) && exit 1

# editorconfig-check
if has ec; then
  filesargs ec
else
  echo '  see https://github.com/editorconfig-checker/editorconfig-checker'
  exit 1
fi

has gitleaks
gitleaks protect -v --staged

# TODO:
# Configuration: allow TODOs, skip editorconfig, skip other steps
# Call <project-root>/bin/g pre-commit
# git fetch parent branch
# Report conflicting files, with command to view and/or resolve
# List commits made to parent branch
# List your PR reviews (don't show errors), with command to open in browser
# List your tickets assigned to you.
# Share code with pre-push
